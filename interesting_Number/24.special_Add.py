#!/usr/bin/python
# Env: python3
# Rewrite by afei_0and1

'''
24、不使用四则运算符的加法运算
    加减乘除四则运算是编程语言的最基础的功能，要求不使用"+"、"-"、"*"、"/"这四个运算符，
通过编程实现加法运算。即：输入两个正整数，在不使用四则运算符的前提下将其相加的结果返回。

巧用二进制原理和位运算解题：
（1）对于两个正整数进行异或运算，得到的结果实际上就是两数相加后所有不需要进位的位。例如：
二进制1101和1000进行异或，结果为0101
（2）对于两个正整数进行与运算，得到的结果实际上就是需要进位的位。例如：二进制1000和1101
进行按位与运算，结果为1000，进位的话，只需要左移1位即可实现。
    只需要重复上面两种操作，直到不再有进位的位出现，这时就是最终运算的结果。
'''

def special_Add(M, N):
    n = 0   #标记未进位
    f = 0   #标记要进位
    while N != 0:
        n = M ^ N
        f = (M & N) << 1
        M = n
        N = f
    return  M

print(special_Add(321, 666))
print(bin(321)[2:])
print(bin(666)[2:])
print(bin(special_Add(321, 666))[2:])

'''
Output result：
    987
    101000001
    1010011010
    1111011011
'''